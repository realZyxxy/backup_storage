
************************************************************
** Backing up https://medium.com/@real.zyxxy/hello-chatgpt-world-run-chatgpt-inside-a-python-script-in-5-minutes-4c9f4bdb6e28?source=about_page-------------------------------------&sk=453993a0cb6a50d4e5f3bcf1a1f9800a **
************************************************************
# Hello, ChatGPT World! Run ChatGPT inside a Python script in 5 minutes

## You could run a ChatGPT prompt inside a Python script in under 5 minutes at 0 financial cost and 0 maintenance burden

To achieve this, you will need 4 elements:

  1.  **A Python environment where you will be running the script.** If you don’t have one, follow [my guide to set up a web-based Replit environment](/@real.zyxxy/get-a-web-based-pro-grade-python-environment-in-5-minutes-at-0-cost-8843f5a07f88) in 5 minutes at 0 financial cost and 0 maintenance burden;
  2. An **openai** package added to your Python environment;
  3.  **Your** **OpenAI API key** : this unique sequence of characters is needed so that OpenAI can grant you access. OpenAI generates it free of charge on their website;
  4.  **A Python script** that calls an **openai** package — you can either get it as a [**.py file**](https://github.com/realZyxxy/HelloChatGPTWorld/blob/main/main.py) or fork the [**GitHub project**](https://github.com/realZyxxy/HelloChatGPTWorld) **,** or fork the [**repl**](https://replit.com/@zyxxy/HelloChatGPTWorld) **.** The script is short and self-explanatory.



Let’s discuss these elements in more detail.

## Getting An OpenAI API Key

Firstly, you need to get **an account with OpenAI** — **sign up**[ **here**](https://chat.openai.com/auth/login) if you don’t have it yet. You need to provide them with an e-mail address and a mobile phone number. It takes under 5 minutes. The free tier is sufficient for our needs.

Next, head to <https://platform.openai.com/account/api-keys> and generate your API key.

## Adding openai Package

We call ChatGPT through [openai package.](https://pypi.org/project/openai/)

If you use **Replit** , you don’t have to do anything! The package will be added to your project automatically the first time you run your script.

If you use a **Python engine installed on your computer** , you will need to install this package yourself — follow the instructions detailed at <https://pypi.org/project/openai/>

## Using Your API Key In Your Code

You should not add the value of your API key to your code in plain text because it will compromise the security of your access.

Saving your API Key as a system variable [as explained here](/@real.zyxxy/using-access-credentials-in-python-code-securely-7253894fdff4?sk=044bdb23562078cd2494c8aafdeaf5e1) is often a viable choice, although there could be more secure choices. If the system variable option is acceptable for you, **save your OpenAI API Key as a system variable called “OPENAI_API_KEY” — this is required to be able to run the project described below.**

## The Python Script

 **The Python script** that calls an OpenAI package is available as a [**.py file**](https://github.com/realZyxxy/HelloChatGPTWorld/blob/main/main.py), or you can fork the [**GitHub project**](https://github.com/realZyxxy/HelloChatGPTWorld) or fork the [**repl**](https://replit.com/@zyxxy/HelloChatGPTWorld) **.**

The script is short and self-explanatory. **Run** it, and ChatGPT will respond

or something in a similar style.

To **play** with this basic example, start by changing two variables, _prompt_ and _temperature,_ specified at the beginning of the script.
    
    
    prompt = "Hello, the brave new ChatGPT world!" # That's your chat prompt  
    # You can change its value - ask ChatGPT anything you like.  
      
    temperature = 0.9 # temperature's value must be a number between 0.0 and 1.0,   
    # 0.0 being the most deterministic, consistent ChatGPT mode,  
    # and 1.0 being the most random, unpredictable, creative ChatGPT mode.

These variables will be passed to a method of a class defined in openai package as below:
    
    
    long_response = openai.ChatCompletion.create(  
        model="gpt-3.5-turbo",  
        messages=[{"role": 'user', "content": prompt}],  
        temperature=temperature # a number between 0 and 1  
        # temperature is the degree of randomness of the output of the model  
      )  
    response = long_response.choices[0].message["content"]

This snippet was taken from the course “ChatGPT Prompt Engineering For Developers” provided by DeepLearning. Read more about ChatGPT completions [here](https://platform.openai.com/docs/guides/chat/introduction). Follow this course for more advanced uses of openai package:

(It’s free for a limited time.)

**************
** Pictures **
**************
1.  : ['1*_LsOnvbTQabGcrRwn3pRyQ.jpeg', '1*FqlKkwPEROYl4IvThjHB8Q.png']
